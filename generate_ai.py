from config.config import AI_CLIENT, AI_MODEL

async def ai_generate(text: str, mode: str) -> str:
    print(f"Запрос к ИИ (mode={mode}): {text}")
    try:
        if mode == "names_programs":
            completion = await AI_CLIENT.chat.completions.create(
                model=AI_MODEL,
                messages=[
                    {
                        "role": "system",
                        "content": f"""
                            Ты - выдающийся академик и эксперт в области высшего образования, специалист по проектированию
                            образовательных программ для ведущих университетов мира. Твоя задача - по указанной области и 
                            ключевым словам сформулировать 10 уникальных, интересных и актуальных названий учебных дисциплин
                            уровня бакалавриата и магистратуры.
                            
                            Требования к названиям:
                            1. Отражать современные вызовы и научные тенденции
                            2. Быть достаточно узкими, но практически применимыми
                            3. Подходить для включения в учебный план ВУЗа
                            4. Быть релевантными для студентов будущего - с прицелом на актуальность в ближайшие 5-10 лет
                            
                            Также для каждой дисциплины напиши **очень краткое пояснение**, чтобы человек мог быстро понять
                            суть курса.
                            
                            **Формат ввода - строго JSON следующего вида**:
                            {{
                                "Название программы 1": "Краткое описание сути курса 1",
                                "Название программы 2": "Краткое описание сути курса 2",
                                ...
                                "Название программы 10": "Краткое описание сути курса 10"
                            }}
                            
                            Тема курса: {text[0]}
                            Ключевые слова: {", ".join(text[1])}
                            
                           ⚠️ Верни результат строго в JSON формате, без пояснений или дополнительного текста.
                        """
                    },
                    {
                        "role": "user",
                        "content": text
                    }
                ]
            )
        elif mode == "generate_full_program":
            completion = await AI_CLIENT.chat.completions.create(
                model=AI_MODEL,
                messages=[
                    {
                        "role": "system",
                        "content": f"""
                            Ты — ведущий специалист в проектировании образовательных программ ВУЗов. На основе указанного 
                            названия дисциплины разработай полную методическую программу курса на 60 академических часов 
                            (30 пар по 2 часа), рассчитанную на годовое обучение студентов. 
                            Курс предполагает теоретические и практические занятия.
                            
                            Название дисциплины: {text}
                            
                            Задача:
                            1. Разбей курс на логически связанные темы (7–10 модулей).
                            2. Для каждой темы укажи:
                               - "short_description": краткое описание содержания темы.
                               - "key_issues": список из 3–5 ключевых вопросов, которые будут изучаться.
                               - "hours": количество академических часов (например: 6).
                               - "control_point": форма контроля — тест, проект, устный опрос и т.д.
                            
                            3. В конце курса добавь блок "literature" со структурой:
                               - "modern": список из 3–5 современных источников (2020–2025), каждый в формате "Название книги (год)".
                               - "classic": список из 3–5 классических источников (до 2020 года), каждый в формате "Название книги (год)".
                            
                            Важно:
                            — Верни результат в **строго JSON-формате**, пример структуры ниже.
                            — Не пиши ничего вне JSON.
                            — Названия тем используй как ключи словаря.
                            
                            ⚠️ Верни результат строго в JSON формате, без пояснений или дополнительного текста. Пример структуры:
                            
                            {{
                              "Тема 1: Название": {{
                                "short_description": "...",
                                "key_issues": ["...", "...", "..."],
                                "hours": 6,
                                "control_point": "..."
                              }},
                              "Тема 2: Название": {{
                                ...
                              }},
                              ...
                              "literature": {{
                                "modern": ["...", "..."],
                                "classic": ["...", "..."]
                              }}
                            }}
                        """
                    },
                    {
                        "role": "user",
                        "content": text
                    }
                ]
            )
        elif mode == "generate_theme_plan":
            completion = await AI_CLIENT.chat.completions.create(
                model=AI_MODEL,
                messages=[
                    {
                        "role": "system",
                        "content": f"""
                            Ты - экспертный преподаватель высшей школы, разрабатывающий академический курс.
                            На основе полной учебной программы и выбранной темы, составь четкий, логичный и полный план 
                            лекции по одной теме курса.
                            
                            Данные:
                              - Название курса: {text[0]}
                              - Полная структура курса (в JSON формате): {text[1]}
                              - Тема, по которой нужно составить лекцию: {text[2]}
                            
                            Требования к содержанию:
                            - Используй описание темы и ключевые вопросы из структуры курса.
                            - Раздели материал на пары (1 пара = 2 академических часа). Количество пар определи сам, 
                              исходя из сложности темы и поля "hours" в теме.
                            - Для каждой пары (лекции) оформи:
                              - Введение (что изучается и зачем),
                              - Основные разделы (3–6 смысловых пунктов, с логикой и примерами),
                              - Заключение (итоги),
                              - Рекомендации по дополнительному изучению (если применимо).
                              
                            ⚠️ Верни результат строго в JSON формате, без пояснений или дополнительного текста. Пример структуры:
                            {{
                              "{text[0]}": {{
                                "1 пара": {{
                                  "introduction": "Кратко о цели и значении темы",
                                  "sections": ["Пункт 1", "Пункт 2", "..."],
                                  "conclusion": "Краткие выводы и закрепление",
                                  "recommendations": ["Ресурс 1", "Ресурс 2"]
                                }},
                                "2 пара": {{
                                  ...
                                }}
                              }}
                            }}
                            
                            Если тема короткая и укладывается в одну пару — заполни только "1 пара".
                            Если рекомендаций по дополнительному изучению нет — возвращай пустой список.
                        """
                    },
                    {
                        "role": "user",
                        "content": text
                    }
                ]
            )
        elif mode == "generate_theme_lection":
            completion = await AI_CLIENT.chat.completions.create(
                model=AI_MODEL,
                messages=[
                    {
                        "role": "system",
                        "content": f"""
                            Ты — опытный преподаватель университета. Твоя задача — составить **полный лекционный материал** 
                            на основе предоставленного плана темы.
    
                            Цель: объяснить материал доступным, логичным, но академичным стилем, с учетом современных примеров. 
                            Пиши так, как будто читаешь лекцию живым студентам.
                            
                            Дано:
                            - Название курса: {text[0]}
                            - Тема лекции: {text[1]}
                            - Структурированный план лекции: {text[2]}
                            
                            Важно:
                            - Лекция делится на пары (по 2 академических часа).
                            - На каждую пару необходимо создать ~3000 слов (4–5 страниц текста).
                            - Если пара включает несколько разделов, подробно распиши каждый.
                            - Используй подзаголовки, списки, примеры, вопросы для обсуждения и пояснения.
                            - Не генерируй весь объём сразу — если это слишком много, начни с **одной пары** или даже одного
                             раздела.
                            
                            ⚠️ Верни результат строго в JSON формате, без пояснений или дополнительного текста. Пример структуры:
                            {{
                              "{text[1]}": {{
                                "1 пара": {{
                                  "introduction": "Текст введения (~300-500 слов)",
                                  "sections": [
                                    {{
                                      "title": "Название первого раздела",
                                      "content": "Подробный текст раздела (~500-800 слов, можно с подзаголовками, примерами, пояснениями)"
                                    }},
                                    ...
                                  ],
                                  "conclusion": "Выводы лекции (~300 слов)",
                                  "recommendations": [
                                    "Ресурс 1",
                                    "Ресурс 2"
                                  ]
                                }},
                                ...
                              }}
                            }}
                        """
                    },
                    {
                        "role": "user",
                        "content": text
                    }
                ]
            )

        result = completion.choices[0].message.content
        print(f"Ответ от ИИ (mode={mode}): {result}\n\n")
        return result

    except Exception as e:
        print(f"Ошибка при запросе к ИИ: {e}")
        if hasattr(e, 'response'):
            print(f"Ответ API: {e.response.text}")
        # Добавляем отладочную информацию
        print(f"Completion object: {completion if 'completion' in locals() else 'Not created'}")
        if 'completion' in locals() and hasattr(completion, 'choices'):
            print(f"Choices: {completion.choices}")
        return None